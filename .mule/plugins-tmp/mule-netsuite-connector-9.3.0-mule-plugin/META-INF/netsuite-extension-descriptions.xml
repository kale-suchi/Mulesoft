<?xml version="1.0" encoding="UTF-8"?>
<extension-documentation>
    <configs>
        <config name="config">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="expirationPolicy">
                    <description><![CDATA[Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.]]></description>
                </parameter>
                <parameter name="warningAsError">
                    <description><![CDATA[When this preference is enabled, warning messages generated by NetSuite are treated as errors that cause an exception, resulting in rejection of the request.]]></description>
                </parameter>
                <parameter name="disableMandatoryCustomFieldValidation">
                    <description><![CDATA[This preference affects the handling of custom fields that are configured in the UI to be mandatory. If you set this preference to true, the fields are not treated as required during SOAP web services requests. If the preference is set to false, the fields are required.]]></description>
                </parameter>
                <parameter name="disableSystemNotesForCustomFields">
                    <description><![CDATA[System notes are system-generated records that track changes to a record, including changes to specific field values. This preference lets you disable the creation of system notes for changes to custom fields. Depending on your integration, using this preference may increase performance.]]></description>
                </parameter>
                <parameter name="ignoreReadOnlyFields">
                    <description><![CDATA[This preference affects the way the system behaves when you mistakenly submit a value for a read-only field. If you set this preference to true, the system ignores these mistakes.]]></description>
                </parameter>
                <parameter name="runServerSuiteScriptAndTriggerWorkflows">
                    <description><![CDATA[By using the runServerSuiteScriptAndTriggerWorkflows preference, you can control SuiteScript and trigger workflows per request. If you do not include this preference in a request, the company preference set on the Web Services Preferences page is used. If you include this preference in the request, it overrides the company preference set in the UI.]]></description>
                </parameter>
                <parameter name="sendRunServerSuiteScript">
                    <description><![CDATA[Send runServerSuiteScript tag in Preferences header]]></description>
                </parameter>
                <parameter name="separator">
                    <description><![CDATA[<p> Separator used to generate the keys required to provided a better support for custom fields/records. </p> <p> If the script Id of the customization that defines a custom field/record contains the separator default character, setup a new one and regenerate the metadata. </p>]]></description>
                </parameter>
            </parameters>
        </config>
        <config name="rest-config">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="expirationPolicy">
                    <description><![CDATA[Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.]]></description>
                </parameter>
            </parameters>
        </config>
    </configs>
    <connections>
        <connection name="login-authentication">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="readTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will wait for a response before it times out. 0 specifies that the client will wait indefinitely.]]></description>
                </parameter>
                <parameter name="readTimeoutUnit">
                    <description><![CDATA[The time unit for Read Timeout.]]></description>
                </parameter>
                <parameter name="connectionTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will attempt to establish a connection before it times out. 0 specifies that the client will continue to attempt to open a connection indefinitely.]]></description>
                </parameter>
                <parameter name="connectionTimeoutUnit">
                    <description><![CDATA[The time unit for Connection Timeout.]]></description>
                </parameter>
                <parameter name="endpoint">
                    <description><![CDATA[The Web Service endpoint.]]></description>
                </parameter>
                <parameter name="tlsContext">
                    <description><![CDATA[Protocol to use for communication. Valid values are HTTP and HTTPS. Default value is HTTP. When using HTTPS the HTTP communication is going to be secured using TLS / SSL. If HTTPS was configured as protocol then the user needs to configure at least the keystore in the tls:context child element of this listener-config.]]></description>
                </parameter>
                <parameter name="proxyHost">
                    <description><![CDATA[The hostname of the HTTP proxy e.g. localhost This field also requires the port to be set.]]></description>
                </parameter>
                <parameter name="proxyPort">
                    <description><![CDATA[The port number of the HTTP proxy e.g. 3128. The port number must be specified if the hostname is also specified.]]></description>
                </parameter>
                <parameter name="proxyUsername">
                    <description><![CDATA[The username which should be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="proxyPassword">
                    <description><![CDATA[The password which would be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="email">
                    <description><![CDATA[The login email of both NetSuite UI and SuiteTalk]]></description>
                </parameter>
                <parameter name="password">
                    <description><![CDATA[The login password of both the NetSuite UI and SuiteTalk]]></description>
                </parameter>
                <parameter name="account">
                    <description><![CDATA[NetSuite SuiteTalk WebService account ID]]></description>
                </parameter>
                <parameter name="roleId">
                    <description><![CDATA[The ID of the role used to login in SuiteTalk, which determines the Processor privileges]]></description>
                </parameter>
                <parameter name="applicationId">
                    <description><![CDATA[The ID related to the Integration record to be used. Integration records are set up on the NetSuite environment.]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
                <parameter name="poolingProfile">
                    <description><![CDATA[Characteristics of the connection pool]]></description>
                </parameter>
            </parameters>
        </connection>
        <connection name="request-based-authentication">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="readTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will wait for a response before it times out. 0 specifies that the client will wait indefinitely.]]></description>
                </parameter>
                <parameter name="readTimeoutUnit">
                    <description><![CDATA[The time unit for Read Timeout.]]></description>
                </parameter>
                <parameter name="connectionTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will attempt to establish a connection before it times out. 0 specifies that the client will continue to attempt to open a connection indefinitely.]]></description>
                </parameter>
                <parameter name="connectionTimeoutUnit">
                    <description><![CDATA[The time unit for Connection Timeout.]]></description>
                </parameter>
                <parameter name="endpoint">
                    <description><![CDATA[The Web Service endpoint.]]></description>
                </parameter>
                <parameter name="tlsContext">
                    <description><![CDATA[Protocol to use for communication. Valid values are HTTP and HTTPS. Default value is HTTP. When using HTTPS the HTTP communication is going to be secured using TLS / SSL. If HTTPS was configured as protocol then the user needs to configure at least the keystore in the tls:context child element of this listener-config.]]></description>
                </parameter>
                <parameter name="proxyHost">
                    <description><![CDATA[The hostname of the HTTP proxy e.g. localhost This field also requires the port to be set.]]></description>
                </parameter>
                <parameter name="proxyPort">
                    <description><![CDATA[The port number of the HTTP proxy e.g. 3128. The port number must be specified if the hostname is also specified.]]></description>
                </parameter>
                <parameter name="proxyUsername">
                    <description><![CDATA[The username which should be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="proxyPassword">
                    <description><![CDATA[The password which would be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="email">
                    <description><![CDATA[The login email of both NetSuite UI and SuiteTalk]]></description>
                </parameter>
                <parameter name="password">
                    <description><![CDATA[The login password of both the NetSuite UI and SuiteTalk]]></description>
                </parameter>
                <parameter name="account">
                    <description><![CDATA[NetSuite SuiteTalk WebService account ID]]></description>
                </parameter>
                <parameter name="roleId">
                    <description><![CDATA[The ID of the role used to login in SuiteTalk, which determines the Processor privileges]]></description>
                </parameter>
                <parameter name="applicationId">
                    <description><![CDATA[The ID related to the Integration record to be used. Integration records are set up on the NetSuite environment.]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
                <parameter name="poolingProfile">
                    <description><![CDATA[Characteristics of the connection pool]]></description>
                </parameter>
            </parameters>
        </connection>
        <connection name="sso-authentication">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="readTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will wait for a response before it times out. 0 specifies that the client will wait indefinitely.]]></description>
                </parameter>
                <parameter name="readTimeoutUnit">
                    <description><![CDATA[The time unit for Read Timeout.]]></description>
                </parameter>
                <parameter name="connectionTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will attempt to establish a connection before it times out. 0 specifies that the client will continue to attempt to open a connection indefinitely.]]></description>
                </parameter>
                <parameter name="connectionTimeoutUnit">
                    <description><![CDATA[The time unit for Connection Timeout.]]></description>
                </parameter>
                <parameter name="endpoint">
                    <description><![CDATA[The Web Service endpoint.]]></description>
                </parameter>
                <parameter name="tlsContext">
                    <description><![CDATA[Protocol to use for communication. Valid values are HTTP and HTTPS. Default value is HTTP. When using HTTPS the HTTP communication is going to be secured using TLS / SSL. If HTTPS was configured as protocol then the user needs to configure at least the keystore in the tls:context child element of this listener-config.]]></description>
                </parameter>
                <parameter name="proxyHost">
                    <description><![CDATA[The hostname of the HTTP proxy e.g. localhost This field also requires the port to be set.]]></description>
                </parameter>
                <parameter name="proxyPort">
                    <description><![CDATA[The port number of the HTTP proxy e.g. 3128. The port number must be specified if the hostname is also specified.]]></description>
                </parameter>
                <parameter name="proxyUsername">
                    <description><![CDATA[The username which should be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="proxyPassword">
                    <description><![CDATA[The password which would be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="partnerId">
                    <description><![CDATA[The partnerId agreed with NetSuite upon enabling SSO]]></description>
                </parameter>
                <parameter name="partnerAccount">
                    <description><![CDATA[NetSuite SuiteTalk WebService account id]]></description>
                </parameter>
                <parameter name="companyId">
                    <description><![CDATA[The companyId used when the SSO mapping was setup]]></description>
                </parameter>
                <parameter name="userId">
                    <description><![CDATA[The userId used when the SSO mapping was setup]]></description>
                </parameter>
                <parameter name="keyFile">
                    <description><![CDATA[The private key file used to encrypt the companyId and userId into an authentication token]]></description>
                </parameter>
                <parameter name="applicationId">
                    <description><![CDATA[The id related to the Integration record to be used. Integration records are set up on the NetSuite environment.]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
                <parameter name="poolingProfile">
                    <description><![CDATA[Characteristics of the connection pool]]></description>
                </parameter>
            </parameters>
        </connection>
        <connection name="token-authentication">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="readTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will wait for a response before it times out. 0 specifies that the client will wait indefinitely.]]></description>
                </parameter>
                <parameter name="readTimeoutUnit">
                    <description><![CDATA[The time unit for Read Timeout.]]></description>
                </parameter>
                <parameter name="connectionTimeout">
                    <description><![CDATA[Specifies the amount of time that the client will attempt to establish a connection before it times out. 0 specifies that the client will continue to attempt to open a connection indefinitely.]]></description>
                </parameter>
                <parameter name="connectionTimeoutUnit">
                    <description><![CDATA[The time unit for Connection Timeout.]]></description>
                </parameter>
                <parameter name="endpoint">
                    <description><![CDATA[The Web Service endpoint.]]></description>
                </parameter>
                <parameter name="tlsContext">
                    <description><![CDATA[Protocol to use for communication. Valid values are HTTP and HTTPS. Default value is HTTP. When using HTTPS the HTTP communication is going to be secured using TLS / SSL. If HTTPS was configured as protocol then the user needs to configure at least the keystore in the tls:context child element of this listener-config.]]></description>
                </parameter>
                <parameter name="proxyHost">
                    <description><![CDATA[The hostname of the HTTP proxy e.g. localhost This field also requires the port to be set.]]></description>
                </parameter>
                <parameter name="proxyPort">
                    <description><![CDATA[The port number of the HTTP proxy e.g. 3128. The port number must be specified if the hostname is also specified.]]></description>
                </parameter>
                <parameter name="proxyUsername">
                    <description><![CDATA[The username which should be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="proxyPassword">
                    <description><![CDATA[The password which would be supplied to the HTTP proxy on every request to NetSuite. This field is optional, since a user might want to pass through an unauthenticated HTTP proxy.]]></description>
                </parameter>
                <parameter name="consumerKey">
                    <description><![CDATA[The consumer key value for the token based authentication enabled integration record being used]]></description>
                </parameter>
                <parameter name="consumerSecret">
                    <description><![CDATA[The consumer secret value for the token based authentication enabled integration record being used]]></description>
                </parameter>
                <parameter name="tokenId">
                    <description><![CDATA[The token id representing the unique combination of a user and integration generated within the NetSuite environment]]></description>
                </parameter>
                <parameter name="tokenSecret">
                    <description><![CDATA[The respective token secret for the user/integration pair]]></description>
                </parameter>
                <parameter name="account">
                    <description><![CDATA[NetSuite SuiteTalk WebService account id.]]></description>
                </parameter>
                <parameter name="signatureAlgorithm">
                    <description><![CDATA[The algorithm used to compute the SHA hash signature]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
                <parameter name="poolingProfile">
                    <description><![CDATA[Characteristics of the connection pool]]></description>
                </parameter>
            </parameters>
        </connection>
        <connection name="restlet-login">
            <description><![CDATA[Restlet Login Authentication]]></description>
            <parameters>
                <parameter name="readTimeout">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="readTimeoutUnit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="connectionTimeout">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="connectionTimeoutUnit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="endpoint">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="tlsContext">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyHost">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyPort">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyUsername">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyPassword">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="email">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="password">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="account">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="roleId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="applicationId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
                <parameter name="poolingProfile">
                    <description><![CDATA[Characteristics of the connection pool]]></description>
                </parameter>
            </parameters>
        </connection>
        <connection name="restlet-token">
            <description><![CDATA[Restlet Token Authentication]]></description>
            <parameters>
                <parameter name="readTimeout">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="readTimeoutUnit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="connectionTimeout">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="connectionTimeoutUnit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="endpoint">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="tlsContext">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyHost">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyPort">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyUsername">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="proxyPassword">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="consumerKey">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="consumerSecret">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="tokenId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="tokenSecret">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="account">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="signatureAlgorithm">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
                <parameter name="poolingProfile">
                    <description><![CDATA[Characteristics of the connection pool]]></description>
                </parameter>
            </parameters>
        </connection>
    </connections>
    <extension name="NetSuite">
        <description><![CDATA[NetSuite Connector synchronizes data and automates business processes between NetSuite and third party applications, either on-premise or in the cloud. The Connector makes use of the SuiteTalk WSDL to provide SOAP based integration in order to generate NetSuite business objects, make use of different authentication levels, and support error handling.]]></description>
        <parameters/>
    </extension>
    <operations>
        <operation name="addFile">
            <description><![CDATA[Creates a new file record. This Processor is similar to addRecord, but is customized for simplifying local content passing.]]></description>
            <parameters>
                <parameter name="folderId">
                    <description><![CDATA[the id of the folder record where to add this file.]]></description>
                </parameter>
                <parameter name="attributes">
                    <description><![CDATA[The additional file attributes.]]></description>
                </parameter>
                <parameter name="content">
                    <description><![CDATA[The content of the file record to add. It can be of type String, Byte Array, File or InputStream.]]></description>
                </parameter>
                <parameter name="fileName">
                    <description><![CDATA[the name of the remote file.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="addList">
            <description><![CDATA[Used to add one or more records into the system. The attributes that define each record can either be the POJOs corresponding to the field or a map that represents it.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The type of record to add.]]></description>
                </parameter>
                <parameter name="recordMaps">
                    <description><![CDATA[The records with their attributes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="addRecord">
            <description><![CDATA[Creates a new record. The attributes can either be the pojos corresponding to the field or a map that represents it.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The type of record to add.]]></description>
                </parameter>
                <parameter name="attributes">
                    <description><![CDATA[The record attributes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="addRecordObjects">
            <description><![CDATA[Creates new records.]]></description>
            <parameters>
                <parameter name="addedRecords">
                    <description><![CDATA[A list of Records.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncAddList">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#addList. The attributes can either be the POJOs corresponding to the field or a map that represents it. In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type.]]></description>
                </parameter>
                <parameter name="recordAttributes">
                    <description><![CDATA[A list of Map&lt;String,Object&gt; containing the attributes of the records that will be added.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncDeleteList">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#deleteList(NetSuiteSoapConfig, NetSuiteSoapConnection, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="deletedBaseRefTypes">
                    <description><![CDATA[A list of BaseRefType that references the objects to be deleted.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncDeleteListRecords">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#deleteRecordsList(NetSuiteSoapConfig, NetSuiteSoapConnection, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="deletedRecordRefs">
                    <description><![CDATA[A list of RecordRef that references the objects to be deleted.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncGetList">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#getList(NetSuiteSoapConfig, NetSuiteSoapConnection, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="retrievedBaseRefTypes">
                    <description><![CDATA[A list of BaseRefType that references the objects to be retrieved.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncGetListRecords">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#getList(NetSuiteSoapConfig, NetSuiteSoapConnection, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="retrievedRecordRefs">
                    <description><![CDATA[A list of RecordRef that references the objects to be retrieved.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncInitializeList">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#initializeList(NetSuiteSoapConfig, NetSuiteSoapConnection, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="initializeRecords">
                    <description><![CDATA[A list of InitializeRecord that references the objects to be initialized.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncSearch">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#search(NetSuiteSoapConfig, String, SearchRecord, boolean, boolean, int). Searches for all records that match the given criteria, asynchronously. Note, due to the nature of the operation, this does not support paging meaning that only the first page of results would be returned. If no criteria is specified, all records of the given type are retrieved. In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID.]]></description>
            <parameters>
                <parameter name="searchRecord">
                    <description><![CDATA[The search type. See SearchRecordType.]]></description>
                </parameter>
                <parameter name="criteria">
                    <description><![CDATA[An instance of SearchRecord that defines the attributes that make up the search.]]></description>
                </parameter>
                <parameter name="bodyFieldsOnly">
                    <description><![CDATA[Defaults to TRUE and indicates that the information in the body fields of the record are returned ? significantly improving performance. Any fields in associated lists or sublists are not returned. If the bodyFieldsOnly field is set to FALSE, all fields associated with the record are returned.]]></description>
                </parameter>
                <parameter name="returnSearchColumns">
                    <description><![CDATA[Defaults to TRUE, meaning that only search columns will be returned in your search.]]></description>
                </parameter>
                <parameter name="pageSize">
                    <description><![CDATA[Maximum amount of results per page.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncUpdateList">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#updateList(NetSuiteSoapConfig, NetSuiteSoapConnection, String, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type.]]></description>
                </parameter>
                <parameter name="recordAttributes">
                    <description><![CDATA[A list of Map&lt;String,Object&gt; containing the attributes of the records that will be updated.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="asyncUpsertList">
            <description><![CDATA[An asynchronous request equivalent to RecordOperations#upsertList(NetSuiteSoapConfig, NetSuiteSoapConnection, String, List). In asynchronous requests, your client application sends a request to the SuiteTalk Platform where it is placed in a processing queue and handled asynchronously with other requests. Note that all available jobs for each polling period will be processed contiguously. There is no enforced waiting period for a job that is available. Once a job is initiated, a job ID is returned in the Web services response. Your client application can then check on the status and result of the request by referencing the job ID. Note: Asynchronous request JobIDs are valid for 30 days.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type.]]></description>
                </parameter>
                <parameter name="recordAttributes">
                    <description><![CDATA[A list of Map&lt;String,Object&gt; containing the attributes of the records that will be inserted or updated.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="attachRecord">
            <description><![CDATA[Attaches a source or contact record - that is, the attachment - to another destination one Not all record types are supported as source, destination or contact. Please consult NetSuite documentation.]]></description>
            <parameters>
                <parameter name="source">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="destination">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="contact">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="role">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="changeEmail">
            <description><![CDATA[Used to change the email address for the account.]]></description>
            <parameters>
                <parameter name="newEmail">
                    <description><![CDATA[New email value.]]></description>
                </parameter>
                <parameter name="currentCredentials">
                    <description><![CDATA[current user password.]]></description>
                </parameter>
                <parameter name="justThisAccount">
                    <description><![CDATA[Update email for the current account only.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="changePassword">
            <description><![CDATA[Used to change the password for the account.]]></description>
            <parameters>
                <parameter name="newPassword">
                    <description><![CDATA[New password value.]]></description>
                </parameter>
                <parameter name="currentCredentials">
                    <description><![CDATA[current user password.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="checkAsyncStatus">
            <description><![CDATA[This operation checks whether a particular asynchronous job has finished processing or not.]]></description>
            <parameters>
                <parameter name="jobId">
                    <description><![CDATA[The ID of the job to check.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="delete">
            <description><![CDATA[Deletes a record. Not all records can be deleted. Please consult NetSuite documentation.]]></description>
            <parameters>
                <parameter name="baseRef">
                    <description><![CDATA[An instance of BaseRefType.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="deleteList">
            <description><![CDATA[Used to delete one or more records in the system.]]></description>
            <parameters>
                <parameter name="deletedBaseRefTypes">
                    <description><![CDATA[The records with their attributes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="deleteRecord">
            <description><![CDATA[Deletes a record. Not all records can be deleted. Please consult NetSuite documentation.]]></description>
            <parameters>
                <parameter name="recordRef">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="deleteRecordsList">
            <description><![CDATA[Used to delete one or more records in the system.]]></description>
            <parameters>
                <parameter name="deletedRecordRefs">
                    <description><![CDATA[A list of RecordRef to delete.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="detachRecord">
            <description><![CDATA[Detaches a source record - that is, the attachment - from a destination record.]]></description>
            <parameters>
                <parameter name="source">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="destination">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="get">
            <description><![CDATA[This is used to retrieve a record by providing the unique id that identifies that record.]]></description>
            <parameters>
                <parameter name="baseRef">
                    <description><![CDATA[An instance of BaseRefType.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getAsyncResult">
            <description><![CDATA[This operation returns the result of a job given that it has finished processing.]]></description>
            <parameters>
                <parameter name="jobId">
                    <description><![CDATA[The ID of the job.]]></description>
                </parameter>
                <parameter name="pageIndex">
                    <description><![CDATA[The page number of the asynchronous result.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getBudgetExchangeRates">
            <description><![CDATA[Used to get and filter all data related to Budget Exchange Rates table. This table maintain exchange rates between the root-parent and child subsidiaries for use in the budgeting process.]]></description>
            <parameters>
                <parameter name="period">
                    <description><![CDATA[References an existing period.]]></description>
                </parameter>
                <parameter name="fromSubsidiary">
                    <description><![CDATA[References the receiving subsidiary.]]></description>
                </parameter>
                <parameter name="toSubsidiary">
                    <description><![CDATA[References the originating subsidiary.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getCurrentRate">
            <description><![CDATA[Used to get the exchange rate between two currencies based on a certain date.]]></description>
            <parameters>
                <parameter name="rateFilter">
                    <description><![CDATA[Filter the returned currency exchange rates using this filter.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getCustomRecord">
            <description><![CDATA[This is used to retrieve a custom record by providing the unique id that identifies that record.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The type of record to get.]]></description>
                </parameter>
                <parameter name="internalId">
                    <description><![CDATA[The internalId of the record to get. You can choose between this or externalId.]]></description>
                </parameter>
                <parameter name="externalId">
                    <description><![CDATA[The externalId of the record to get. You can choose between this or internalId.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getCustomizationIds">
            <description><![CDATA[Returns the IDs of available customizations for a given customization type.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type.]]></description>
                </parameter>
                <parameter name="includeInactives">
                    <description><![CDATA[If inactive customizations should also be returned.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getDataCenterUrls">
            <description><![CDATA[Used to obtain suitable the NetSuite data center URL for the account.]]></description>
            <parameters>
                <parameter name="accountId">
                    <description><![CDATA[account ID.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getDeletedRecords">
            <description><![CDATA[Returns a list of deleted records for the given record type and date period.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The type of the target deleted record to retrieve.]]></description>
                </parameter>
                <parameter name="pageIndex">
                    <description><![CDATA[The page number to retrieve.]]></description>
                </parameter>
                <parameter name="deletedDate">
                    <description><![CDATA[A SearchDateField where you can define a predefined search date value, or a date period of your choice, together with the search date operator.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getItemAvailability">
            <description><![CDATA[Returns the availability for a given item record reference. If the Multi-Location Inventory feature is enabled, this Processor returns results for all locations. For locations that do not have any items available, only location IDs and names are listed in results.]]></description>
            <parameters>
                <parameter name="record">
                    <description><![CDATA[An instance of RecordRef.]]></description>
                </parameter>
                <parameter name="ifModifiedSince">
                    <description><![CDATA[An optional modified since date. If set, only items with quantity available changes recorded as of the specified date are returned.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getList">
            <description><![CDATA[This operation is used to retrieve a list of objects referenced in the list of BaseRef object.]]></description>
            <parameters>
                <parameter name="references">
                    <description><![CDATA[List of BaseRef child classes. Check BaseRef for a list of child classes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getPostingTransactionSummary">
            <description><![CDATA[Used to retrieve a summary of the actual data in an Account. The getPostingTransactionSummary operation allows you to retrieve a summary of the actual data posted to the general ledger in an Account. You can use available filters/fields to generate reports that are similar to what you see when you run financial reports such as a Trial Balance, Balance Sheet, or an Income Statement.]]></description>
            <parameters>
                <parameter name="fields">
                    <description><![CDATA[Specify how you want your data grouped.]]></description>
                </parameter>
                <parameter name="filters">
                    <description><![CDATA[Specify your filtering criteria.]]></description>
                </parameter>
                <parameter name="pageIndex">
                    <description><![CDATA[Specify the page to be returned.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getRecord">
            <description><![CDATA[This is used to retrieve a record by providing the unique id that identifies that record.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The type of record to get.]]></description>
                </parameter>
                <parameter name="internalId">
                    <description><![CDATA[The internalId of the record to get. You can choose between this or externalId.]]></description>
                </parameter>
                <parameter name="externalId">
                    <description><![CDATA[The externalId of the record to get. You can choose between this or internalId.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getRecords">
            <description><![CDATA[This operation is used to retrieve a list of all records of the specified type. Records that support the getAll operation are listed in the GetAllRecordType.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getSavedSearch">
            <description><![CDATA[Retrieves a list of existing saved searches for the given record type.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getSelectValue">
            <description><![CDATA[Used to retrieve valid values for a given recordRef field where the referenced record type is not yet exposed in the Web services API or when the logged in role does not have access to the instances of the record type.]]></description>
            <parameters>
                <parameter name="page">
                    <description><![CDATA[For select values that span multiple pages, use this argument to specify which page to return in your response.]]></description>
                </parameter>
                <parameter name="fieldDescriptor">
                    <description><![CDATA[Use to specify all characteristics of the field containing the select values. For example, depending on the field and the values you want returned, you will specify the names or internalIds for the record type, sublist, and field. You may also specify filtering criteria to refine the select options returned in the response.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="getServerTime">
            <description><![CDATA[Returns the server time.]]></description>
            <parameters>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="initialize">
            <description><![CDATA[Populates fields on transaction line items with values from a related record, in a similar way empty text boxes are pre-populated within the NetSuite UI.]]></description>
            <parameters>
                <parameter name="recordToInitialize">
                    <description><![CDATA[An instance of InitializeRecord.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="initializeList">
            <description><![CDATA[Used to emulate the UI workflow by pre-populating fields on transaction line items with values from a related record.]]></description>
            <parameters>
                <parameter name="initializeRecords">
                    <description><![CDATA[The list of InitializeRecord to initialize.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="mapSso">
            <description><![CDATA[Used to automate the mapping between external applications credentials and NetSuites credentials for a user. This operation provides a mapping, not a login to NetSuite. This operation does NOT provide the ability to log in using a single sign-on token, cannot provisian a partner with the inbound single sign-on feature, or aid with public/private key exchange. Use of this operation implies that the account already has inbound single sign-on set up and has access to the associated partner ID and encryption keys needed to generate the token.]]></description>
            <parameters>
                <parameter name="credentials">
                    <description><![CDATA[The SsoCredentials to map.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="search">
            <description><![CDATA[The search operation is used to execute a search on a specific record type based on a set of criteria. This processor has been enhanced with a paging mechanism. Searches can be Basic, Advanced or Join searches. See SearchRecord for all the available searches.]]></description>
            <parameters>
                <parameter name="key">
                    <description><![CDATA[The search type. See {SearchRecordType}.]]></description>
                </parameter>
                <parameter name="searchRecord">
                    <description><![CDATA[An instance of SearchRecord that defines the attributes that make up the search.]]></description>
                </parameter>
                <parameter name="bodyFieldsOnly">
                    <description><![CDATA[Defaults to TRUE and indicates that the information in the body fields of the record are returned ? significantly improving performance. Any fields in associated lists or sub-lists are not returned. If the bodyFieldsOnly field is set to FALSE, all fields associated with the record are returned.]]></description>
                </parameter>
                <parameter name="returnSearchColumns">
                    <description><![CDATA[Defaults to TRUE, meaning that only search columns will be returned in your search.]]></description>
                </parameter>
                <parameter name="pageSize">
                    <description><![CDATA[Page size when returning paginated results]]></description>
                </parameter>
                <parameter name="streamingStrategy">
                    <description><![CDATA[Configure if repeatable streams should be used and their behaviour]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="updateInviteeStatus">
            <description><![CDATA[Sets a new invitation status for a given event.]]></description>
            <parameters>
                <parameter name="eventId">
                    <description><![CDATA[The target event ID.]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[The new status value to set.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="updateInviteeStatusList">
            <description><![CDATA[Sets multiple new invitation status for a given event.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="inviteeStatuses">
                    <description><![CDATA[A list of the UpdateInviteeStatusReference items.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="updateList">
            <description><![CDATA[Used to update one or more existing records in the system by providing new values for the fields to be updated for each record. The records to be updated are identified through the provided unique identifiers.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The type of record to update.]]></description>
                </parameter>
                <parameter name="recordMaps">
                    <description><![CDATA[The records with their attributes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="updateRecord">
            <description><![CDATA[Updates an existing record. The attributes can either be the POJOs corresponding to the field or a map that represents it.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type to update.]]></description>
                </parameter>
                <parameter name="attributes">
                    <description><![CDATA[The record attributes, including internalId or externalId attribute.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="updateRecordsList">
            <description><![CDATA[Used to update one or more existing records in the system by providing a list of records. The records to be updated are identified through the provided unique identifiers. NOTE: This call cannot be used with Data mapping or data sense, it was added to allow users to add a batch of records of any type in 1 call.]]></description>
            <parameters>
                <parameter name="records">
                    <description><![CDATA[The records with their attributes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="upsertList">
            <description><![CDATA[Adds or updates one or more instances of a record type in NetSuite. The upsertList operation is similar to both the addList and updateList operations, but upsert can be run without first determining whether records exist in NetSuite. Records are identified by their external ID and their record type. If a record of the specified type with a matching external ID exists in the system, it is updated. If it does not exist, a new record is created. Because external ID is mandatory for this operation, 'upsertList' is supported only for records that support the external ID field. Also, this operation prohibits the passing of internal ID values.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type to upsert.]]></description>
                </parameter>
                <parameter name="recordMaps">
                    <description><![CDATA[The record types to be upserted.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="upsertRecord">
            <description><![CDATA[Adds a new instance or to update an instance of a record in NetSuite. The upsert operation is similar to both the add and update operations, but upsert can be run without first determining whether a record exists in NetSuite. A record is identified by its external ID and its record type. If a record of the specified type with a matching external ID exists in the system, it is updated. If it does not exist, a new record is created. Because external ID is mandatory for this operation, upsert is supported only for records that support the external ID field. Also, this operation prohibits the passing of internal ID values.]]></description>
            <parameters>
                <parameter name="recordType">
                    <description><![CDATA[The target record type to update.]]></description>
                </parameter>
                <parameter name="attributes">
                    <description><![CDATA[The record attributes.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="callRestletDelete">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="script">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="deploy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="data">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="callRestletGet">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="script">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="deploy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="data">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="callRestletPost">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="script">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="deploy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="data">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="callRestletPut">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="script">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="deploy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="data">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
    </operations>
    <sources>
        <source name="deleted-object-trigger">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="pageSize">
                    <description><![CDATA[The number of records to be retrieved per call. This field must be between 5 and 1000 for synchronous operations . And between 5 and 2000 for asynchronous operations .]]></description>
                </parameter>
                <parameter name="since">
                    <description><![CDATA[Please specify a date in the YYYY-MM-DD hh:mm:ss format (i.e. 2017-03-17 16:30:40). If this field is empty, this operation will retrieve the selected objects from the time the Mule app is started.]]></description>
                </parameter>
                <parameter name="objectType">
                    <description><![CDATA[The type of record that will be retrieved when deleted.]]></description>
                </parameter>
                <parameter name="schedulingStrategy">
                    <description><![CDATA[Configures the scheduler that triggers the polling]]></description>
                </parameter>
                <parameter name="redeliveryPolicy">
                    <description><![CDATA[Defines a policy for processing the redelivery of the same message]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </source>
        <source name="modified-object-trigger">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="pageSize">
                    <description><![CDATA[The number of records to be retrieved per call. This field must be between 5 and 1000 for synchronous operations . And between 5 and 2000 for asynchronous operations .]]></description>
                </parameter>
                <parameter name="since">
                    <description><![CDATA[Please specify a date in the YYYY-MM-DD hh:mm:ss format (i.e. 2017-03-17 16:30:40). If this field is empty, this operation will retrieve the selected objects from the time the Mule app is started.]]></description>
                </parameter>
                <parameter name="objectType">
                    <description><![CDATA[The type of record that will be retrieved when modified.]]></description>
                </parameter>
                <parameter name="schedulingStrategy">
                    <description><![CDATA[Configures the scheduler that triggers the polling]]></description>
                </parameter>
                <parameter name="redeliveryPolicy">
                    <description><![CDATA[Defines a policy for processing the redelivery of the same message]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </source>
        <source name="new-object-trigger">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="pageSize">
                    <description><![CDATA[The number of records to be retrieved per call. This field must be between 5 and 1000 for synchronous operations . And between 5 and 2000 for asynchronous operations .]]></description>
                </parameter>
                <parameter name="since">
                    <description><![CDATA[Please specify a date in the YYYY-MM-DD hh:mm:ss format (i.e. 2017-03-17 16:30:40). If this field is empty, this operation will retrieve the selected objects from the time the Mule app is started.]]></description>
                </parameter>
                <parameter name="objectType">
                    <description><![CDATA[The type of record that will be retrieved when created.]]></description>
                </parameter>
                <parameter name="schedulingStrategy">
                    <description><![CDATA[Configures the scheduler that triggers the polling]]></description>
                </parameter>
                <parameter name="redeliveryPolicy">
                    <description><![CDATA[Defines a policy for processing the redelivery of the same message]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </source>
    </sources>
    <types>
        <type name="org.mule.module.netsuite.extension.api.AsyncResult">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="org.mule.module.netsuite.extension.api.AsyncStatusResult">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="estRemainingDuration">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="jobId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="percentCompleted">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.BaseRef">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="name">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.BudgetExchangeRate">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="averageRate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="currentRate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="fromSubsidiary">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="historicalRate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="period">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="toSubsidiary">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.CurrencyRate">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="baseCurrency">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="effectiveDate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="exchangeRate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="fromCurrency">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.CurrencyRateFilter">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="baseCurrency">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="effectiveDate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="fromCurrency">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.CustomizationRef">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="externalId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="internalId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="name">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="scriptId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="type">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.DataCenterUrls">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="restDomain">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="systemDomain">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="webservicesDomain">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.GetAllResult">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="recordList">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalRecords">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.GetDeletedResult">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="deletedRecordList">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="pageIndex">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="pageSize">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalPages">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalRecords">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.GetPostingTransactionSummaryResult">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="operationId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="pageIndex">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="pageSize">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="postingTransactionSummaryList">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalPages">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalRecords">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.GetSelectValueFieldDescription">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="customForm">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="customRecordType">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="customTransactionType">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="field">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="filter">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="filterByValueList">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="recordType">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="sublist">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.GetSelectValueResult">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="baseRefList">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalPages">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="totalRecords">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.InitializeRecord">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="auxReference">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="reference">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="referenceList">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="type">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.ItemAvailability">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="item">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="lastQtyAvailableChange">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="locationId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="onHandValueMli">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="preferredStockLevel">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="quantityAvailable">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="quantityBackOrdered">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="quantityCommitted">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="quantityOnHand">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="quantityOnOrder">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="reorderPoint">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.PostingTransactionSummaryField">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="account">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="book">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="clazz">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="department">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="entity">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="item">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="location">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="parentItem">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="period">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="subsidiary">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.PostingTransactionSummaryFilter">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="account">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="book">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="clazz">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="department">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="entity">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="item">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="location">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="parentItem">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="period">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="subsidiary">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.Record">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="nullFieldList">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.RecordRef">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="externalId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="internalId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="name">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="type">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.SearchDateField">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="operator">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="predefinedSearchValue">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="searchValue">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="searchValue2">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.SearchRecord">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="org.mule.module.netsuite.extension.api.SsoCredentials">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="account">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="authenticationToken">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="email">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="partnerId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="password">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="role">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.UpdateInviteeStatusReference">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="eventId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="responseCode">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.WriteResponse">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="baseRef">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="status">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="org.mule.module.netsuite.extension.api.util.BaseRefType">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="externalId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="internalId">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="name">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="specificFields">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="type">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
    </types>
</extension-documentation>
